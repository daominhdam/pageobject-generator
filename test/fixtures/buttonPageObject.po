var PageObject = function () {

   this.idButton = element(by.id('id-button'));
   this.inputButton = element(by.buttonText('InputButton'));
   this.items = element.all(by.exactRepeater('item in main.items'));
   this.multiExpressionButton = element(by.exactBinding('main.multiExpression'));
   this.nameButton = element(by.name('name-button'));
   this.singleExpressionButton = element(by.exactBinding('main.singleExpression'));
   this.submitButton = element(by.buttonText('Submit'));
   this.textOnlyButton = element(by.buttonText('Text only'));
   this.titleButton = element(by.buttonText('Button with title'));

   this.get = function () {
      browser.get('');
   };

   this.clickElementButton = function (rowIndex1, rowIndex2) {
      this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).click();
   };

   this.clickIdButton = function () {
      this.idButton.click();
   };

   this.clickInputButton = function () {
      this.inputButton.click();
   };

   this.clickItemButton = function (rowIndex1) {
      this.items.get(rowIndex1).element(by.exactBinding('item')).click();
   };

   this.clickMultiExpressionButton = function () {
      this.multiExpressionButton.click();
   };

   this.clickNameButton = function () {
      this.nameButton.click();
   };

   this.clickSingleExpressionButton = function () {
      this.singleExpressionButton.click();
   };

   this.clickSubmitButton = function () {
      this.submitButton.click();
   };

   this.clickTextOnlyButton = function () {
      this.textOnlyButton.click();
   };

   this.clickTitleButton = function () {
      this.titleButton.click();
   };

   this.elementButtonShouldBeVisible = function (rowIndex1, rowIndex2) {
      expect(this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).isDisplayed()).toBe(true);
   };

   this.elementButtonShouldNotBeVisible = function (rowIndex1, rowIndex2) {
      expect(this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).isDisplayed()).toBe(false);
   };

   this.elementButtonShouldHaveClass = function (rowIndex1, rowIndex2, className) {
      this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.elementButtonShouldNotHaveClass = function (rowIndex1, rowIndex2, className) {
      this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.elementButtonShouldHaveText = function (rowIndex1, rowIndex2, value) {
      expect(this.items.get(rowIndex1).element(by.exactRepeater('element in main.elements').row(rowIndex2)).element(by.exactBinding('element')).getText()).toBe(value);
   };

   this.elementsCountShouldBe = function (rowIndex1, count) {
      expect(this.items.get(rowIndex1).all(by.exactRepeater('element in main.elements')).count()).toBe(count);
   };

   this.idButtonShouldBeVisible = function () {
      expect(this.idButton.isDisplayed()).toBe(true);
   };

   this.idButtonShouldNotBeVisible = function () {
      expect(this.idButton.isDisplayed()).toBe(false);
   };

   this.idButtonShouldHaveClass = function (className) {
      this.idButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.idButtonShouldNotHaveClass = function (className) {
      this.idButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.inputButtonShouldBeVisible = function () {
      expect(this.inputButton.isDisplayed()).toBe(true);
   };

   this.inputButtonShouldNotBeVisible = function () {
      expect(this.inputButton.isDisplayed()).toBe(false);
   };

   this.inputButtonShouldHaveClass = function (className) {
      this.inputButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.inputButtonShouldNotHaveClass = function (className) {
      this.inputButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.itemButtonShouldBeVisible = function (rowIndex1) {
      expect(this.items.get(rowIndex1).element(by.exactBinding('item')).isDisplayed()).toBe(true);
   };

   this.itemButtonShouldNotBeVisible = function (rowIndex1) {
      expect(this.items.get(rowIndex1).element(by.exactBinding('item')).isDisplayed()).toBe(false);
   };

   this.itemButtonShouldHaveClass = function (rowIndex1, className) {
      this.items.get(rowIndex1).element(by.exactBinding('item')).getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.itemButtonShouldNotHaveClass = function (rowIndex1, className) {
      this.items.get(rowIndex1).element(by.exactBinding('item')).getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.itemButtonShouldHaveText = function (rowIndex1, value) {
      expect(this.items.get(rowIndex1).element(by.exactBinding('item')).getText()).toBe(value);
   };

   this.itemsCountShouldBe = function (count) {
      expect(this.items.count()).toBe(count);
   };

   this.multiExpressionButtonShouldBeVisible = function () {
      expect(this.multiExpressionButton.isDisplayed()).toBe(true);
   };

   this.multiExpressionButtonShouldNotBeVisible = function () {
      expect(this.multiExpressionButton.isDisplayed()).toBe(false);
   };

   this.multiExpressionButtonShouldHaveClass = function (className) {
      this.multiExpressionButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.multiExpressionButtonShouldNotHaveClass = function (className) {
      this.multiExpressionButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.multiExpressionButtonShouldHaveText = function (value) {
      expect(this.multiExpressionButton.getText()).toBe(value);
   };

   this.nameButtonShouldBeVisible = function () {
      expect(this.nameButton.isDisplayed()).toBe(true);
   };

   this.nameButtonShouldNotBeVisible = function () {
      expect(this.nameButton.isDisplayed()).toBe(false);
   };

   this.nameButtonShouldHaveClass = function (className) {
      this.nameButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.nameButtonShouldNotHaveClass = function (className) {
      this.nameButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.singleExpressionButtonShouldBeVisible = function () {
      expect(this.singleExpressionButton.isDisplayed()).toBe(true);
   };

   this.singleExpressionButtonShouldNotBeVisible = function () {
      expect(this.singleExpressionButton.isDisplayed()).toBe(false);
   };

   this.singleExpressionButtonShouldHaveClass = function (className) {
      this.singleExpressionButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.singleExpressionButtonShouldNotHaveClass = function (className) {
      this.singleExpressionButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.singleExpressionButtonShouldHaveText = function (value) {
      expect(this.singleExpressionButton.getText()).toBe(value);
   };

   this.submitButtonShouldBeVisible = function () {
      expect(this.submitButton.isDisplayed()).toBe(true);
   };

   this.submitButtonShouldNotBeVisible = function () {
      expect(this.submitButton.isDisplayed()).toBe(false);
   };

   this.submitButtonShouldHaveClass = function (className) {
      this.submitButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.submitButtonShouldNotHaveClass = function (className) {
      this.submitButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.textOnlyButtonShouldBeVisible = function () {
      expect(this.textOnlyButton.isDisplayed()).toBe(true);
   };

   this.textOnlyButtonShouldNotBeVisible = function () {
      expect(this.textOnlyButton.isDisplayed()).toBe(false);
   };

   this.textOnlyButtonShouldHaveClass = function (className) {
      this.textOnlyButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.textOnlyButtonShouldNotHaveClass = function (className) {
      this.textOnlyButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

   this.titleButtonShouldBeVisible = function () {
      expect(this.titleButton.isDisplayed()).toBe(true);
   };

   this.titleButtonShouldNotBeVisible = function () {
      expect(this.titleButton.isDisplayed()).toBe(false);
   };

   this.titleButtonShouldHaveClass = function (className) {
      this.titleButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) !== -1).toBe(true);
      });
   };

   this.titleButtonShouldNotHaveClass = function (className) {
      this.titleButton.getAttribute('class').then(function (classes) {
         expect(classes.split(' ').indexOf(className) === -1).toBe(true);
      });
   };

};

module.exports = PageObject;
